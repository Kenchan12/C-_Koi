@page "/koiFishCreate"
@inject IKoiFishService KoiFishService
@inject IPondService PondService
@inject NavigationManager Navigation
@inject IToastService ToastService
@using KoiFishManager.Models.KoiFish
@using KoiFishManager.Models.Pond

<h3>Thêm Cá Mới</h3>

<EditForm Model="@newKoiFish" OnValidSubmit="OnCreateKoiFish">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group" style="margin-bottom: 10px">
        <label for="name">Tên cá</label>
        <InputText id="name" class="form-control" @bind-Value="newKoiFish.Name" />
    </div>

    <div class="form-group" style="margin-bottom: 10px">
        <label for="color">Màu sắc</label>
        <InputText id="color" class="form-control" @bind-Value="newKoiFish.Color" />
    </div>

    <div class="form-group" style="margin-bottom: 10px">
        <label for="size">Kích thước (cm)</label>
        <InputNumber id="size" class="form-control" @bind-Value="newKoiFish.Size" />
    </div>

    <div class="form-group" style="margin-bottom: 10px">
        <label for="origin">Xuất xứ</label>
        <InputText id="origin" class="form-control" @bind-Value="newKoiFish.Origin" />
    </div>

    <div class="form-group" style="margin-bottom: 10px">
        <label for="healthStatus">Sức khỏe</label>
        <InputText id="healthStatus" class="form-control" @bind-Value="newKoiFish.HealthStatus" />
    </div>

    <!-- Dropdown to select pond -->
    <div class="form-group" style="margin-bottom: 10px">
        <label for="pondId">Hồ nuôi</label>
        <select id="pondId" class="form-control" @bind="selectedPondId">
            <option value="">-- Select Pond --</option>
            @foreach (var pond in pondList)
            {
                <option value="@pond.Id">@pond.Name</option>
            }
        </select>
        @if (selectedPondId == 0)
        {
            <div class="text-danger">Chọn hồ nuôi.</div>
        }
    </div>

    <button type="submit" class="btn btn-success" disabled="@(selectedPondId == 0)">Thêm cá</button>
</EditForm>

@code {
    private KoiFishRequest newKoiFish = new KoiFishRequest();
    private List<PondResponse> pondList;
    private int selectedPondId = 0;  // This variable stores the selected pond ID

    // Load the list of ponds
    protected override async Task OnInitializedAsync()
    {
        try
        {
            pondList = await PondService.GetAllPondsAsync();

        }
        catch (Exception ex)
        {
            Console.WriteLine("Error fetching ponds: " + ex.Message);
            ToastService.ShowWarning("No ponds found. Add ponds Plase!!  Redirecting to create page...");
            await Task.Delay(2000); // Đợi 2 giây
            Navigation.NavigateTo("/pondCreate");
        }
    }

    private async Task OnCreateKoiFish()
    {
        try
        {
            if (selectedPondId == 0)
            {
                Console.WriteLine("No pond selected");
                return; // Do not proceed if no pond is selected
            }

            // Call service to create new koi fish and assign pond ID
            await KoiFishService.AddKoiFishAsync(selectedPondId, newKoiFish);
            Navigation.NavigateTo("/KoiFishes"); // Redirect to the list of koi fish after creation
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error creating koi fish: {ex.Message}");
        }
    }
}
